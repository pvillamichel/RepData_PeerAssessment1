title("Ozone and Wind in New York City")
with(airquality, plot(wind, Ozone))
with(airquality, plot(Wind, Ozone))
title"Ozone and Wind in New York City"()
title("Ozone and Wind in New York City")
par()
length(parf())
length(par())
names(par())
?plot
?par
par()$pin
par()$fg
par("pch")
par("lty")
scatterplot(airquality$Wind, airquality$Ozone, type="n")
plot(airquality$Wind, airquality$Ozone, type="n")
titile(main="Wind and Ozone in NYC")
title(main="Wind and Ozone in NYC")
may<-airquality(airquality$Month==5)
may<-airquality$Month==5
may<-subset(airquality, Month=5)
may<-subset(airquality, Month==5)
points(may$Wind, may$Ozone, col.points=="blue")
points(may$Wind, may$Ozone)
info()
par()
?par
?points
points(may$Wind, may$Ozone, col="blue")
?points
points(may$Wind, may$Ozone, col="blue", cex=17)
?points
points(may$Wind, may$Ozone, col="blue", pch=17)
plot(airquality$Wind, airquality$Ozone, type="n")
title(main="Wind and Ozone in NYC")
points(may$Wind, may$Ozone, col="blue", pch=17)
notmay<-subset(airquality, airquality$Month!=5)
notmay<-subset(airquality, Month!=5)
?pch
points(notmay$Wind, notmay$Ozone, col="red", pch=8)
legend(toprighr, pch=c(17,8), col=c("blue", "red"), legend=c("May", "Other Months"))
legend(topright, pch=c(17,8), col=c("blue", "red"), legend=c("May", "Other Months"))
legend("topright", pch=c(17,8), col=c("blue", "red"), legend=c("May", "Other Months"))
abline(v=median(airquality$Wind), lty=2, lwt=2)
?abline
abline(v=median(airquality$Wind), lty=2, lwd=2)
par()$mfrow=c(1,2)
par(mfrow=c(1,2))
plot(airquality$Wind, airquality$Ozone, title="Ozone and Wind")
plot(airquality$Wind, airquality$Ozone, main ="Ozone and Wind")
plot(airquality$Ozone, airquality$Solar, main ="Ozone and Solar Radiation")
plot(airquality$Ozone, airquality$Solar.R, main ="Ozone and Solar Radiation")
par(mfrow=c(2,3))
par(mfrow=c(1,3))
par(mfrow=c(1,3), mar=c(4,4,2,1), oma=c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main ="Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main ="Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main ="Ozone and Temperature")
mtext("Ozone and Weather in New Yor City", outer=TRUE)
mtext("Ozone and Weather in New York City", outer=TRUE)
swirl()
swirl()
swwirl()
swirl()
swirl()
library(swirl)
swirl()
head(airquality)
xyplot(Ozone~Wind, airquality)
xyplot(Ozone~Wind, airquality, col="red", pch=8, main="Big Apple Data")
xyplot(Ozone~Wind, dta = airquality, col="red", pch=8, main="Big Apple Data")
xyplot(Ozone~Wind, data = airquality, col="red", pch=8, main="Big Apple Data")
xyplot(Ozone ~ Wind, data = airquality, pch=8, col="red", main="Big Apple Data")
xyplot(Ozone~Wind, airquality | as.factor(Month))
xyplot(Ozone~Wind | as.factor(Month))
xyplot(Ozone~Wind | as.factor(Month), airquality)
xyplot(Ozone~Wind | as.factor(Month), data=airquality)
xyplot(Ozone~Wind | as.factor(Month), data=airquality, layout=c(5,1))
xyplot(Ozone~Wind | Month)
xyplot(Ozone~Wind | Month, data=airquality)
xyplot(Ozone~Wind | Month, data=airquality, layout=c(5,1))
p<-xyplot(Ozone~Wind, data=airquality)
p
p(1)
p[1]
names(p)
mynames[myfull]
p[["formula"]]
p[[1]]
p[["x.limits"]]
table(f)
xyplot(y~x|f, c(2,1))
xyplot(y~x|f, layout=c(2,1))
v1
v2
myedit("plot1.R")
pathtofile(plot1.R, local=TRUE)
pathtofile(plot1.R, local="TRUE")
pathtofile(plot1.R, TRUE)
pathtofile(plot1.R, "TRUE")
pathtofile(plot1.R)
pathtofile("plot1.R", local=TRUE)
pathtofile("plot1.R", local set=TRUE)
pathtofile("plot1.R",  set=TRUE)
pathtofile("plot1.R",  ocal.set=TRUE)
View(pathtofile)
source(pathtofile("plot1.R"),local=TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"),local=TRUE)
head(diamonds)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"),local=TRUE)
xyplot(price~carat| color*cut, diamonds)
xyplot(price~carat|color*cut,data=diamonds,strip=FALSE,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
xyplot(price~carat|color*cut,data=diamonds,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
samble(colors(),10)
sample(colors(),10)
colorRamp(c("red","blue"))
pal <- colorRamp(c("red","blue"))
pal(1)
pal(0)
pal(1)
3
pal(seq(0,1,len=6))
p1 <- colorRampPalette(c("red","blue"))
p1(2)
p1(6)
0xcc
p2 <- colorRampPalette(c("red","yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?rgb
p3 <- rampColorPalette(c("red","blue","green"), alpha=0.5)
p3 <- colorRampPalette(c("red","blue","green"), alpha=0.5)
p3 <- colorRampPalette(c("blue","green"), alpha=0.5)
p3(0.5)
p3(5)
plot(x,y,pch=19,col=rgb(0,0.5,0.5))
plot(x,y,pch=19,col=rgb(0,0.5,0.5, .3))
cols <- brewer.pal(3, "BuGn")
showMe(cols)
pal<-colorRampPalette(cols)
shome(pal(3))
showMe(pal(3))
showMe(pal(20))
image(volcano,col=pal(20))
image(volcano,col=p1(20))
swirl()
str(mpg)
qplot(displ, hwy, mpg)
qplot(displ, hwy, mpg)
qplot("displ", "hwy", "mpg")
s
f
qplot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg, col=drv)
qplot(displ, hwy, data=mpg, color=drv)
qplot(displ, hwy, data=mpg, color=drv, geom=c("point","smooth"))
qplot(hwy, mpg, color=drive)
qplot(hwy, data=mpg, color=drive)
qplot(hwy, mpg, color=drv)
qplot(hwy, data=mpg, color=drv)
qplot(y=hwy, data=mpg, color=drv)
view(myhigh)
View(myhigh)
myhigh
qplot(drv, hwy, data=mpg, geom="boxplot")
qplot(drv, hwy, data=mpg, geom="boxplot", color="manufacturer")
qplot(drv, hwy, data=mpg, geom="boxplot", color=manufacturer)
qplot(hwy, data=mpg, fill=drv)
qplot(displ, hwy, data=mpg, facets=~drv)
qplot(displ, hwy, data=mpg, facets=.~drv)
qplot(hwy, data=mpg, facets=drv~., binwidth=2)
qplot(displ,hwy, data=mpg, geom=c("point", "smooth"), facets=.~drv)
ggplot(mpg, aes(displ, hwy))
g<-ggplot(mpg, aes(displ, hwy))
summary(g)
g+geom_point()
(g+geom_point())+geom_smooth())
(g+geom_point())+geom_smooth()
g+geom_point()+geom_smooth()
g+geom_point()+lm()
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink", size=4, alpha=1/2)+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink", size=4, alpha=1/2)
g+geom_point(size=4, alpha=1/2, aes(drv))
g+geom_point(size=4, alpha=1/2, aes(color=drv))
g+geom_point(aes(color=drv),labs(title="Swirl Rules!"),labs(x="Displacement", y="Hwy Milage"))
g+geom_point(aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Displacement", y="Hwy Milage")
g+geom_point(aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Displacement", y="Hwy Mileage")
g+geom_point(aes(color=drv), size=2, alpha=1/2)+geom_smooth(size=4, linetype=3, method="lm", se=FALSE)
g+geom_point(aes(color=drv))+theme_bw(base_family = "Times")
plot(myx, myy, type="1", ylim=c(-3,3))
plot(myx, myy, type="l", ylim=c(-3,3))
g<-ggplot(data = testdat)+aes(x=myx, y=myy)
g<-ggplot(data = testdat, aes(x=myx, y=myy))
g+geom_line()
g+geom_line(ylim(-3,3))
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim(-3,3))
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g<-ggplot(data=mpg, aes(x=displ, y=displ, color=factor(year)))
g<-ggplot(data=mpg, aes(x=displ, y=hwy, color=factor(year)))
g+geom_point()
g+geom_point()+facet_grid(dry~cyl, margins=TRUE)
g+geom_point()+facet_grid(formula=dry~cyl, margins=TRUE)
jkj
g+geom_point()
g+geom_point()+facet_grid(dry~cyl, margins=TRUE)
g + geom_point() + facet_grid(drv~cyl, margins=TRUE)
g + geom_point() + facet_grid(drv~cyl, margins=TRUE) + geom_smooth(method="lm", se=FALSE, size=2 color="black")
g + geom_point() + facet_grid(drv~cyl, margins=TRUE) + geom_smooth(method="lm", se=FALSE, size=2, color="black")
g + geom_point() + facet_grid(drv~cyl, margins=TRUE) + geom_smooth(method="lm", se=FALSE, size=2, color="black") + labs(x="Displacement", y = "Highway Milage", title="Swirl Rules!")
g + geom_point() + facet_grid(drv~cyl, margins=TRUE) + geom_smooth(method="lm", se=FALSE, size=2, color="black") + labs(x="Displacement", y = "Highway Mileage", title="Swirl Rules!")
str(diamonds)
qplo(price, data=diamonds)
qplot(price, data=diamonds)
range(diamonds$price)
qplot(price, data=diamonds, binwidth=18497/30)
brk
counts
qplot(price, data=diamonds, binwidth=18497/30, fill=cut)
qplot(price, data=diamonds, binwidth=18497/30, geom="density")
qplot(price, data=diamonds, geom="density")
qplot(price, data=diamonds, geom="density", color=cut)
qplot(carat, price, data=diamonds)
qplot(carat, price, data=diamonds, shape=cut)
qplot(carat, price, data=diamonds, color=cut)
qplot(carat, price, data=diamonds, color=cut, geom_smooth="lm")
qplot(carat, price, data=diamonds, color=cut, geom_smooth("lm"))
qplot(carat, price, data=diamonds, color=cut, geom_smooth="lm")
qplot(carat, price, data=diamonds, color=cut) +geom_smooth("lm")
qplot(carat, price, data=diamonds, color=cut, geom_smooth="lm")
qplot(carat, price, data=diamonds, color=cut)
qplot(carat, price, data=diamonds, color=cut) +geom_smooth(method="lm")
qplot(carat, price, data=diamonds, color=cut, facets = .~cut) +geom_smooth(method="lm")
g<-ggplot(diamonds,aes(depth, price))
summary(g)
g+geom_point()
g+geom_point(alpha=1/3)
cutpoints<-quantile(diamonts$carat, seq(0,1,lenght=4),na.rm=TRUE)
cutpoints<-quantile(diamonds$carat, seq(0,1,lenght=4),na.rm=TRUE)
cutpoints<-quantile(diamonds$carat, seq(0,1,length=4),na.rm=TRUE)
cutpoints
diamonds$car2<-cut(diamonts$carat, cutpoints)
diamonds$car2<-cut(diamonds$carat, cutpoints)
g<-ggplot(diamonds,aes(depth, price))
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm",size=3, color="pink"")
)
)
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm",size=3, color="pink")
jn
)
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm",size=3, color="pink")
ggplot(diamonds,aes(carat,price))+geom_boxplot()+facet_grid(.~cut)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet)
text(gfg)
panel.abline(c("e","r","t"))
panel.abline("kjhfj")
xyplot(weight ~ Time | Diet, BodyWeight, text("khg"))
xyplot(weight ~ Time | Diet, BodyWeight, points())
?text()
xyplot(weight ~ Time | Diet, BodyWeight, text(topright,"khg"))
xyplot(weight ~ Time | Diet, BodyWeight, text("topright","khg"))
?panel.abline
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
?par
?splom
?print.trellis
?trellis.par.set
library(datasets)
data(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, geom = "smooth")
?geom
??geom
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
g
g+geom_point()
qplot(votes, rating, data = movies)
library(ggplot2)
qplot(votes, rating, data = movies)
movies
swirl()
library(swirl)
swirl()
swirl()
dead(dataMatrix)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPath.R", local=TRUE)
source("addPatt.R", local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
diag
madu*diag*t(matv)
matu*diag*t(matv)
matu%*%diag%*%t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v
svd2$v[,1:2]
svd2$d
dim(faceData)
a1<-(svd1$u[,1]*svd1$d[1])%*%t8svd1$v[,1])
a1<-(svd1$u[,1]*svd1$d[1])%*%t(svd1$v[,1])
image(a1)
myImage(a1)
a2<-svd1$u[,1:2]%*%svd1$d[1:2]%*%t(svd1$v[,1:2])
svd1$d
a2 <- svd1$u[,1:2] %*% svd1$d[1:2] %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myImage() svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage( svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage( svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
librarry(swirl)
library(swirl)
swirl()
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
(table(ssd$activity))
table(ssd$activity)
sub1<-subser(ssd, subject=1)
sub1<-subset(ssd, subject=1)
sub1<-subset(ssd, subject==1)
dim(sub1)
names(ssd[,1:12])
names(sub1[,1:12])
myedit(showXY.R)
myedit("showXY.R")
showMe(1:6)
dis(x[,1:3])
dist(x[,1:3])
dist(sub1[,1:3])
madist<-dist(sub1[,1:3])
mdist<-dist(sub1[,1:3])
hclust(mdist)
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist<-dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1<-svd(scale(su1[,-c(562,563)]))
svd1<-svd(scale(su1[,-c(562:563)]))
svd1<-svd(scale(sub1[,-c(562:563)]))
dim(svd1$u)
maxCon<-which.max(svd1$v)
maxCon<-which.max(svd1$v[,2])
mdist<-dist(c(sub1[,10:12],maxCon)
)
mdist<-dist(c(sub1[,10:12],maxCon))
mdist<-dist(c(sub1[,10:12])
)
mdist<-dist(sub1[,10:12)
mdist<-dist(sub1[,10:12])
mdist<-dist(sub1[,c(10:12,maxCon)])
hclustering<-hclust(mdist)
myplclust(hclustering, col.lab=unclass(sub1$activity))
myplclust(hclustering, lab.col =unclass(sub1$activity))
names(sub1[maxCon])
kClust<-kmeans(sub1[,-c(562:563)], 6)
table(kClust$cluster, sub1$activity)
kClust<-kmeans(sub1[,-c(562:563)], 6, 100)
kClust<-kmeans(sub1[,-c(562:563)], 6, nstart=100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
kClust$centers
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12], pch=19, ylab="Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12], pch=19, ylab="Laying Cluster")
plot(kClust$centers[walkdown,1:12], pch=19, ylab="Walkdown Cluster")
end()
exit()
library(swirl)
swirl()
kjsandf
slkndfcas
end()
library("xml")
library("XML")
?xmlParseDoc
url<-"http://indicadoreseconomicos.bccr.fi.cr/indicadoreseconomicos/Cuadros/frmVerCatCuadro.aspx?CodCuadro=9&Idioma=1&FecInicial=1900/01/31&FecFinal=2100/12/31&Exportar=True"
data <- xmlParse(url, useInternalNodes=TRUE)
library("xml2")
read_xml(url, as_html = TRUE)
data<-read_xml(url, as_html = TRUE)
data
daat[2]
data[2]
data[2][1]
data[2][[1]]
class(data[2])
data[[1]]
data[[2]]
as.list(read_xml(url, as_html = TRUE))
data
data[2]
data$doc
class(data)
xmlparse(data)
xmlParse(data)
data<-read_xml(url, as_html = TRUE)
xmlParse(data)
data2<-xmlParse(data)
data2
class(data2)
class(data)
recs <- xml_find_all(data, "//record")
recs <- xml_find_all(data[2], "//record")
recs
xmlValue(data)
doc <- xmlTreeParse(data, useInternalNodes = TRUE)
doc
class(doc)
doc2<- xmlToList(doc)
doc2
xmlToDataFrame(doc)
doc2<- xmlToDataFrame(doc)
?xmlToDataFrame
class(data2)
data2
data
class(data)
data2
data2
summary(data2)
class(data2)
data
setwd("~/OneDrive/Documents/Coursera/Reproducible_Research_Week2Project")
summary(DATA)
DATA<-read.csv("activity.csv")
summary(DATA)
steps_by_interval<-aggregate(DATA$steps, list(DATA$interval), mean, na.rm=TRUE)
colnames(steps_by_interval) <- c("interval", "steps")
plot(steps_by_interval$interval, steps_by_interval$steps, type="l")
replace <- function(interval) steps_by_interval[steps_by_interval$interval==interval,"steps"]
DATA_new<-DATA
DATA_new[is.na(DATA_new$steps),"steps"]<-sapply(DATA_new[is.na(DATA_new$steps),"interval"],replace)
head(DATA_new)
head(DATA)
DATA_new$weekdays<-weekdays(as.Date(DATA_new$date))
DATA_new[DATA_new$weekdays==c("Saturday", "Sunday"),"weekdays"]<-"weekend"
DATA_new[DATA_new$weekdays!="weekend","weekdays"]<-"weekday"
DATA_new$weekdays<-as.factor(DATA_new$weekdays)
summary(DATA_new)
> df<-read.table(textConnection('
+ egg 1 20
+ egg 2 30
+ jap 3 50
+ jap 1 60'))
df<-read.table(textConnection('
+ egg 1 20
+ egg 2 30
+ jap 3 50
+ jap 1 60'))
df
aggregate(df$V3,list(df$V1),mean)
df<-read.table(textConnection('
egg 1 20
egg 2 30
jap 3 50
jap 1 60'))
df
aggregate(df$V3,list(df$V1),mean)
aggregate(df$V3,list(df$V2),mean)
aggregate(df$V3,list(df$V2, df$V1),mean)
aggregate(DATA_new$steps,list(DATA_new$interval),mean)
DATA_new
aggregate(DATA_new$steps,list(DATA_new$interval, DATA_new$weekdays),mean)
?xyplot
library(lattice)
?xyplot
DATA
setwd("~/OneDrive/Documents/Coursera/RepData_PeerAssessment1")
