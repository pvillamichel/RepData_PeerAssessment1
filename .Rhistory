names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
(table(ssd$activity))
table(ssd$activity)
sub1<-subser(ssd, subject=1)
sub1<-subset(ssd, subject=1)
sub1<-subset(ssd, subject==1)
dim(sub1)
names(ssd[,1:12])
names(sub1[,1:12])
myedit(showXY.R)
myedit("showXY.R")
showMe(1:6)
dis(x[,1:3])
dist(x[,1:3])
dist(sub1[,1:3])
madist<-dist(sub1[,1:3])
mdist<-dist(sub1[,1:3])
hclust(mdist)
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist<-dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1<-svd(scale(su1[,-c(562,563)]))
svd1<-svd(scale(su1[,-c(562:563)]))
svd1<-svd(scale(sub1[,-c(562:563)]))
dim(svd1$u)
maxCon<-which.max(svd1$v)
maxCon<-which.max(svd1$v[,2])
mdist<-dist(c(sub1[,10:12],maxCon)
)
mdist<-dist(c(sub1[,10:12],maxCon))
mdist<-dist(c(sub1[,10:12])
)
mdist<-dist(sub1[,10:12)
mdist<-dist(sub1[,10:12])
mdist<-dist(sub1[,c(10:12,maxCon)])
hclustering<-hclust(mdist)
myplclust(hclustering, col.lab=unclass(sub1$activity))
myplclust(hclustering, lab.col =unclass(sub1$activity))
names(sub1[maxCon])
kClust<-kmeans(sub1[,-c(562:563)], 6)
table(kClust$cluster, sub1$activity)
kClust<-kmeans(sub1[,-c(562:563)], 6, 100)
kClust<-kmeans(sub1[,-c(562:563)], 6, nstart=100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
kClust$centers
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12], pch=19, ylab="Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12], pch=19, ylab="Laying Cluster")
plot(kClust$centers[walkdown,1:12], pch=19, ylab="Walkdown Cluster")
end()
exit()
library(swirl)
swirl()
kjsandf
slkndfcas
end()
library("xml")
library("XML")
?xmlParseDoc
url<-"http://indicadoreseconomicos.bccr.fi.cr/indicadoreseconomicos/Cuadros/frmVerCatCuadro.aspx?CodCuadro=9&Idioma=1&FecInicial=1900/01/31&FecFinal=2100/12/31&Exportar=True"
data <- xmlParse(url, useInternalNodes=TRUE)
library("xml2")
read_xml(url, as_html = TRUE)
data<-read_xml(url, as_html = TRUE)
data
daat[2]
data[2]
data[2][1]
data[2][[1]]
class(data[2])
data[[1]]
data[[2]]
as.list(read_xml(url, as_html = TRUE))
data
data[2]
data$doc
class(data)
xmlparse(data)
xmlParse(data)
data<-read_xml(url, as_html = TRUE)
xmlParse(data)
data2<-xmlParse(data)
data2
class(data2)
class(data)
recs <- xml_find_all(data, "//record")
recs <- xml_find_all(data[2], "//record")
recs
xmlValue(data)
doc <- xmlTreeParse(data, useInternalNodes = TRUE)
doc
class(doc)
doc2<- xmlToList(doc)
doc2
xmlToDataFrame(doc)
doc2<- xmlToDataFrame(doc)
?xmlToDataFrame
class(data2)
data2
data
class(data)
data2
data2
summary(data2)
class(data2)
data
setwd("~/OneDrive/Documents/Coursera/Reproducible_Research_Week2Project")
summary(DATA)
DATA<-read.csv("activity.csv")
summary(DATA)
steps_by_interval<-aggregate(DATA$steps, list(DATA$interval), mean, na.rm=TRUE)
colnames(steps_by_interval) <- c("interval", "steps")
plot(steps_by_interval$interval, steps_by_interval$steps, type="l")
replace <- function(interval) steps_by_interval[steps_by_interval$interval==interval,"steps"]
DATA_new<-DATA
DATA_new[is.na(DATA_new$steps),"steps"]<-sapply(DATA_new[is.na(DATA_new$steps),"interval"],replace)
head(DATA_new)
head(DATA)
DATA_new$weekdays<-weekdays(as.Date(DATA_new$date))
DATA_new[DATA_new$weekdays==c("Saturday", "Sunday"),"weekdays"]<-"weekend"
DATA_new[DATA_new$weekdays!="weekend","weekdays"]<-"weekday"
DATA_new$weekdays<-as.factor(DATA_new$weekdays)
summary(DATA_new)
> df<-read.table(textConnection('
+ egg 1 20
+ egg 2 30
+ jap 3 50
+ jap 1 60'))
df<-read.table(textConnection('
+ egg 1 20
+ egg 2 30
+ jap 3 50
+ jap 1 60'))
df
aggregate(df$V3,list(df$V1),mean)
df<-read.table(textConnection('
egg 1 20
egg 2 30
jap 3 50
jap 1 60'))
df
aggregate(df$V3,list(df$V1),mean)
aggregate(df$V3,list(df$V2),mean)
aggregate(df$V3,list(df$V2, df$V1),mean)
aggregate(DATA_new$steps,list(DATA_new$interval),mean)
DATA_new
aggregate(DATA_new$steps,list(DATA_new$interval, DATA_new$weekdays),mean)
?xyplot
library(lattice)
?xyplot
DATA
setwd("~/OneDrive/Documents/Coursera/RepData_PeerAssessment1")
knitr::opts_chunk$set(echo = TRUE)
knit2html("report.Rmd", "report.html")
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
knit2html("report.Rmd", "report.html")
setwd("~/OneDrive/Documents/Coursera/RepData_PeerAssessment1")
setwd("~/OneDrive/Documents/Coursera/Reproducible Research/Week2/RepData_PeerAssessment1c")
setwd("~/OneDrive/Documents/DATA/BCCR")
library(httr)
library(XML)
library(readxl)
library(httr)
library(XML)
library(readxl)
url <- "http://indicadoreseconomicos.bccr.fi.cr/indicadoreseconomicos/Cuadros/frmVerCatCuadro.aspx?CodCuadro=432&Idioma=1&FecInicial=1900/01/01&FecFinal=2099/12/31&Exportar=True"
response <- GET(url)
read_excel(response)
install.packages("RExcelXML")
xmlParse("response")
xmlParse(response)
response
readBin(response[[6]],character())
readHTMLTable(readBin(response[[6]],character()))
readHTMLTable(readBin(response,character()))
readHTMLTable(readBin(response,character())
)
readHTMLTable(readBin(response))
xmlParse(readHTMLTable(readBin(response[[6]],character())))
readHTMLTable(readBin(response))
library(httr)
library(XML)
library(readxl)
url <- "http://indicadoreseconomicos.bccr.fi.cr/indicadoreseconomicos/Cuadros/frmVerCatCuadro.aspx?CodCuadro=432&Idioma=1&FecInicial=1900/01/01&FecFinal=2099/12/31&Exportar=True"
DATA <- GET(url)
DATA[1]
DATA[2]
DATA[3]
DATA[4]
xlsx::read.xlsx(unz(nuts, "NUTS_2010.xls"), 1)
xlsx::read.xlsx(unz(url, "NUTS_2010.xls"), 1)
?xlsx
?xlsx::`xlsx-package`
unz(url)
unz(response)
?readBin
readbin(url)
readBin(url)
readBin(url,raw)
readBin(url,raw())
a<-readBin(url,raw())
response
respnse$content
response$content
as.list(response)
library(httr)
library(XML)
library(readxl)
url <- "http://indicadoreseconomicos.bccr.fi.cr/indicadoreseconomicos/Cuadros/frmVerCatCuadro.aspx?CodCuadro=432&Idioma=1&FecInicial=1900/01/01&FecFinal=2099/12/31&Exportar=True"
DATA <- GET(url)
class(DATA)
unzip(DATA$content)
DATA$content
class(DATA$content)
readBin(DATA$content,character()))
readBin(DATA$content,character())
readBin(DATA$content,raw())
readBin(DATA$content,character())
library(httr)
library(XML)
library(readxl)
url <- "http://indicadoreseconomicos.bccr.fi.cr/indicadoreseconomicos/Cuadros/frmVerCatCuadro.aspx?CodCuadro=432&Idioma=1&FecInicial=1900/01/01&FecFinal=2099/12/31&Exportar=True"
response <- GET(url) # response is binary
readBin(response$content,character())
?saveXML()
?saveXML
library(httr)
library(XML)
library(readxl)
url <- "http://indicadoreseconomicos.bccr.fi.cr/indicadoreseconomicos/Cuadros/frmVerCatCuadro.aspx?CodCuadro=432&Idioma=1&FecInicial=1900/01/01&FecFinal=2099/12/31&Exportar=True"
response <- GET(url) # response is binary
DATA<-readBin(response$content,character())
saveXML(DATA)
DATA
library(httr)
library(XML)
library(readxl)
url <- "http://indicadoreseconomicos.bccr.fi.cr/indicadoreseconomicos/Cuadros/frmVerCatCuadro.aspx?CodCuadro=432&Idioma=1&FecInicial=1900/01/01&FecFinal=2099/12/31&Exportar=True"
response <- GET(url) # response is binary
DATA<-readBin(response$content,character())
wrie(DATA,DATA.txt)
write(DATA,DATA.txt)
write(DATA)
DATA<-readBin(response$content,numeric())
DATA
DATA<-readBin(response$content,character())
DATA
write(DATA)
view(DATA)
View(DATA)
read_excel(DATA)
read_excel(data)
DATA
class(DATA)
read_xlsx(DATA)
read_xls(DATA)
read.table(DATA)
readHTML.table(DATA)
readHTMLTable(DATA)
library(httr)
library(XML)
library(readxl)
url <- "http://indicadoreseconomicos.bccr.fi.cr/indicadoreseconomicos/Cuadros/frmVerCatCuadro.aspx?CodCuadro=432&Idioma=1&FecInicial=1900/01/01&FecFinal=2099/12/31&Exportar=True"
response <- GET(url) # response is binary
DATA<-readBin(response$content,character())
DATA<-readHTMLTable(DATA)
DATA
DATA<-readHTMLTable(DATA)$Table9
library(httr)
library(XML)
library(readxl)
url <- "http://indicadoreseconomicos.bccr.fi.cr/indicadoreseconomicos/Cuadros/frmVerCatCuadro.aspx?CodCuadro=432&Idioma=1&FecInicial=1900/01/01&FecFinal=2099/12/31&Exportar=True"
response <- GET(url) # response is binary
DATA<-readBin(response$content,character())
DATA<-readHTMLTable(DATA)$Table9
DATA
summary(DATA)
levels(DATA)
levels(DATA$V1)
levels(DATA$V1[])
levels(DATA[])
levels(DATA[,1:2])
droplevels(DATA)
DATA<-droplevels(DATA)
DATA
summary(DATA)
droplevels(DATA[,1])
summary(DATA)
droplevels(DATA[,2])
summary(DATA)
levels(DATA[,2])
levels(droplevels(DATA[,2]))
install.packages("data")
url <- "http://indicadoreseconomicos.bccr.fi.cr/indicadoreseconomicos/Cuadros/frmVerCatCuadro.aspx?idioma=1&CodCuadro=%203476"
response <- GET(url) # response is binary
response
class(response)
readHTMLTable(response)
readHTMLList(response)
response[1]
response[2]
response[3]
response[4]
response[5]
response[6]
library(httr)
library(XML)
library(readxl)
#url <- "http://indicadoreseconomicos.bccr.fi.cr/indicadoreseconomicos/Cuadros/frmVerCatCuadro.aspx?CodCuadro=432&Idioma=1&FecInicial=1900/01/01&FecFinal=2099/12/31&Exportar=True"
url <- "http://indicadoreseconomicos.bccr.fi.cr/indicadoreseconomicos/Cuadros/frmVerCatCuadro.aspx?idioma=1&CodCuadro=%203476"
response <- GET(url) # response is binary
response
response$content
response[7]
response[8]
response[9]
response[10]
response[11]
DATA<-readBin(response$content,character())
DATA
DATA<-readHTMLTable(DATA)
DATA
library(httr)
library(httr)
library(XML)
library(readxl)
#url <- "http://indicadoreseconomicos.bccr.fi.cr/indicadoreseconomicos/Cuadros/frmVerCatCuadro.aspx?CodCuadro=432&Idioma=1&FecInicial=1900/01/01&FecFinal=2099/12/31&Exportar=True"
url <- "http://indicadoreseconomicos.bccr.fi.cr/indicadoreseconomicos/Cuadros/frmVerCatCuadro.aspx?idioma=1&CodCuadro=%203476"
response <- GET(url) # response is binary
response
response[[6]]
read_xlsx(response[[6]])
read_xls(response[[6]])
read.table(response[[6]])
read.table(url)
xmlElementSummary(url)
?xml
isXMLString(response[[6]])
DATA<-readBin(response$content,character())
isXMLString(DATA)
xml(DATA)
parseXMLAndAdd(DATA)
read_excel(DATA)
DATA
DATA[1]
class(DATA)
xml(DATA)
x <- read_html(url)
DATA<-readBin(response$content,character())
xmlParse(DATA)
DATA
library(readXL)
install.packages("readxl")
library(readxl)
read_excel(DATA)
path <- readxl_example("prueba.xls")
path <- readxl_example("prueba")
path <- readxl_example("prueba.xlsx")
read("prueba.xlsx")
read.table("prueba.xlsx")
read_excel("prueba.xlsx")
DATA
head(DATA)
tail(DATA)
DATA[[1]]
DATA
readLines(DATA)
BROWSE(url)
GET(url)
library(httr)
GET(url)
BROWSE(url)
content(DATA)
content(response)
content(response)[1]
content(response)[[1]]
response <- content(GET(url))
response
response <- content(GET(url), as=raw)
response <- content(GET(url), as="raw")
response
response <- content(GET(url), as="text")
response
response <- content(GET(url), as="parsed")
response
install.packages("xml2")
library(XML2)
library(xml2)
read_xml(DATA)
xml_structure(DATA)
xml_structure(DATA[1])
xml_structure(DATA[[1]])
xml_structure(response)
read_xml(response)
xmlfile <- xmlTreeParse(url)
library(XML)
xmlfile <- xmlTreeParse(url)
xml_name(response)
url <- "http://indicadoreseconomicos.bccr.fi.cr/indicadoreseconomicos/Cuadros/frmVerCatCuadro.aspx?idioma=1&CodCuadro=%203476"
response <- content(GET(url), as="parsed")
library(httr)
response <- content(GET(url), as="parsed")
response[2]
response[1]
response
response[[1]]
class(response[[1]])
class(response)
setwd("~/OneDrive/Documents/Coursera/Reproducible Research/Week2/RepData_PeerAssessment1")
---
title: "Course Project Reproductible Research Week 2"
author: "Pablo Villamichel"
date: "4/17/2017"
output: html_document:
---
```{r setup, include=TRUE}
knitr::opts_chunk$set(fig.path = "./figures/")
knitr::opts_chunk$set(echo = TRUE)
```
This document contains a report that answers the questions posed by the second week assignment in a single R markdown document processed by knitr and  transformed into an HTML file.
## Loading the data into suitable format
This first step loads the original csv data into a data frame denominated "DATA":
```{r}
DATA<-read.csv("activity.csv")
summary(DATA)
```
## What is mean total number of steps taken per day?
1. Calculation of the total number of steps taken per day:
```{r}
steps_by_day<-aggregate(DATA$steps[!is.na(DATA$steps)], list(DATA$date[!is.na(DATA$steps)]), sum, na.rm=FALSE)
colnames(steps_by_day) <- c("date", "steps")
steps_by_day
```
*Note: na.rm=TRUE for aggregation renders an erroneus result given that it takes into account days with NA as days with 0 observatyions. Thus this is the correct methodology.*
2. Histogram of the total number of steps taken each day:
```{r}
hist(steps_by_day$steps)
```
3. Calculation of the mean and the median of the total number of steps taken per day:
```{r}
print(mean_steps<-mean(steps_by_day$steps))
print(median_steps<-median(steps_by_day$steps))
```
## What is the average daily activity pattern?
1. Time series plot (i.e. 𝚝𝚢𝚙𝚎 = "𝚕") of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all days (y-axis):
```{r}
steps_by_interval<-aggregate(DATA$steps, list(DATA$interval), mean, na.rm=TRUE)
colnames(steps_by_interval) <- c("interval", "steps")
plot(steps_by_interval$interval, steps_by_interval$steps, type="l")
```
2. 5-minute interval, on average across all the days in the dataset, that contains the maximum number of steps:
```{r}
steps_by_interval$interval[steps_by_interval$steps==max(steps_by_interval$steps)]
```
## Imputing missing values
1. Total number of missing values in the dataset (i.e. the total number of rows with 𝙽𝙰s):
```{r}
dim(DATA[is.na(DATA$steps)==TRUE,])[1]
```
2. Strategy for filling in all of the missing values in the dataset:
Mean for that 5-minute interval for the days with data.
```{r}
replace <- function(interval) steps_by_interval[steps_by_interval$interval==interval,"steps"]
```
3. New dataset that is equal to the original dataset but with the missing data filled in.
```{r}
DATA_new<-DATA
DATA_new[is.na(DATA_new$steps),"steps"]<-sapply(DATA_new[is.na(DATA_new$steps),"interval"],replace)
head(DATA_new)
```
4. Histogram of the total number of steps taken each day
```{r}
steps_by_day_new<-aggregate(DATA_new$steps, list(DATA_new$date), sum, na.rm=TRUE)
colnames(steps_by_day_new) <- c("date", "steps")
hist(steps_by_day_new$steps)
```
Mean and median total number of steps taken per day.
```{r}
print( mean_steps_new<-mean(steps_by_day_new$steps))
print(median_steps_new<-median(steps_by_day_new$steps))
```
Do these values differ from the estimates from the first part of the assignment? What is the impact of imputing missing data on the estimates of the total daily number of steps?
*No change in mean and only negligible given that the average for each 5 minute interval was used and the fact that the NA values correspond to whole days, thus the avergae of the new daily data is equal to the mean of the original daily data.*
```{r}
mean_steps_new - mean_steps
median_steps_new - median_steps
```
##Are there differences in activity patterns between weekdays and weekends?
1. New factor variable in the dataset with two levels – “weekday” and “weekend” indicating whether a given date is a weekday or weekend day.
```{r}
DATA_new$weekdays<-weekdays(as.Date(DATA_new$date))
DATA_new[DATA_new$weekdays==c("Saturday", "Sunday"),"weekdays"]<-"weekend"
DATA_new[DATA_new$weekdays!="weekend","weekdays"]<-"weekday"
DATA_new$weekdays<-as.factor(DATA_new$weekdays)
summary(DATA_new)
```
2. Panel plot containing a time series plot of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all weekday days or weekend days (y-axis).
```{r}
steps_by_interval_new<-aggregate(DATA_new$steps,list(DATA_new$interval, DATA_new$weekdays),mean)
colnames(steps_by_interval_new) <- c("interval", "weekdays","steps")
library(lattice)
xyplot(steps ~ interval | weekdays, steps_by_interval_new, type="l", xlab="Interval", ylab="Number of steps", layout=(c(1,2)))
```
setwd("~/OneDrive/Documents/Coursera/Reproducible Research/Week2/RepData_PeerAssessment1")
